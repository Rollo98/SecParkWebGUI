{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { AUTH_SIGN_UP, AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR, NOTE_SAVE, NOTE_ERROR, NOTE_EDIT } from \"./types\";\nexport var SignUp = function SignUp(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post('http://localhost:5000/users/signup', data);\n\n              case 3:\n                res = _context.sent;\n                dispatch({\n                  type: AUTH_SIGN_UP,\n                  payload: res.data.token\n                });\n                localStorage.setItem('JWT_TOKEN', res.data.token);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (_context.t0.response.status === 400) {\n                  dispatch({\n                    type: AUTH_ERROR,\n                    payload: _context.t0.response.data.details[0].message\n                  });\n                } else {\n                  dispatch({\n                    type: AUTH_ERROR,\n                    payload: _context.t0.response.data\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var SignIn = function SignIn(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post('http://localhost:5000/users/signin', data);\n\n              case 3:\n                res = _context2.sent;\n                dispatch({\n                  type: AUTH_SIGN_IN,\n                  payload: res.data.token\n                });\n                localStorage.setItem('JWT_TOKEN', res.data.token);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                if (_context2.t0.response.status === 400) {\n                  dispatch({\n                    type: AUTH_ERROR,\n                    payload: _context2.t0.response.data.details[0].message\n                  });\n                } else {\n                  dispatch({\n                    type: AUTH_ERROR,\n                    payload: _context2.t0.response.data\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var SignOut = function SignOut() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                localStorage.removeItem('JWT_TOKEN');\n                dispatch({\n                  type: AUTH_SIGN_OUT,\n                  payload: ''\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var NewNote = function NewNote(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return Axios.post('http://localhost:5000/notes/add_note', data);\n\n              case 3:\n                res = _context4.sent;\n                dispatch({\n                  type: NOTE_SAVE,\n                  payload: res.data.token\n                });\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                if (_context4.t0.response.status === 400) {\n                  dispatch({\n                    type: NOTE_ERROR,\n                    payload: _context4.t0.response.data.details[0].message\n                  });\n                } else {\n                  dispatch({\n                    type: NOTE_ERROR,\n                    payload: _context4.t0.response.data\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var EditNote = function EditNote(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return Axios.post('http://localhost:5000/notes/edit_note', data);\n\n              case 3:\n                res = _context5.sent;\n                dispatch({\n                  type: NOTE_EDIT,\n                  payload: res.data.token\n                });\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                if (_context5.t0.response.status === 400) {\n                  dispatch({\n                    type: NOTE_ERROR,\n                    payload: _context5.t0.response.data.details[0].message\n                  });\n                } else {\n                  dispatch({\n                    type: NOTE_ERROR,\n                    payload: _context5.t0.response.data\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/rolandpaiusan/Desktop/SecParkWebGUI/src/actions/index.js"],"names":["Axios","AUTH_SIGN_UP","AUTH_SIGN_IN","AUTH_SIGN_OUT","AUTH_ERROR","NOTE_SAVE","NOTE_ERROR","NOTE_EDIT","SignUp","data","dispatch","post","res","type","payload","token","localStorage","setItem","response","status","details","message","SignIn","SignOut","removeItem","NewNote","EditNote"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n    AUTH_SIGN_UP,\n    AUTH_SIGN_IN,\n    AUTH_SIGN_OUT,\n    AUTH_ERROR,\n    NOTE_SAVE,\n    NOTE_ERROR,\n    NOTE_EDIT\n} from \"./types\";\n\nexport const SignUp = data => {\n    return async dispatch => {\n        try {\n            const res = await Axios.post('http://localhost:5000/users/signup', data)\n            dispatch({\n                type: AUTH_SIGN_UP,\n                payload: res.data.token\n            });\n            localStorage.setItem('JWT_TOKEN', res.data.token)\n        } catch (error) {\n            if (error.response.status === 400) {\n                dispatch({\n                    type: AUTH_ERROR,\n                    payload: error.response.data.details[0].message\n                });\n            } else {\n                dispatch({\n                    type: AUTH_ERROR,\n                    payload: error.response.data\n                });\n            }\n        }\n    };\n}\n\nexport const SignIn = data => {\n    return async dispatch => {\n        try {\n            const res = await Axios.post('http://localhost:5000/users/signin', data)\n            dispatch({\n                type: AUTH_SIGN_IN,\n                payload: res.data.token\n            });\n            localStorage.setItem('JWT_TOKEN', res.data.token)\n        } catch (error) {\n            if (error.response.status === 400) {\n                dispatch({\n                    type: AUTH_ERROR,\n                    payload: error.response.data.details[0].message\n                });\n            } else {\n                dispatch({\n                    type: AUTH_ERROR,\n                    payload: error.response.data\n                });\n            }\n        }\n    };\n}\n\nexport const SignOut = () => {\n    return async dispatch => {\n\n        localStorage.removeItem('JWT_TOKEN');\n        dispatch({\n            type: AUTH_SIGN_OUT,\n            payload: ''\n        });\n    };\n}\n\nexport const NewNote = data => {\n    return async dispatch => {\n        try {\n            const res = await Axios.post('http://localhost:5000/notes/add_note', data)\n            dispatch({\n                type: NOTE_SAVE,\n                payload: res.data.token\n            });\n        } catch (error) {\n            if (error.response.status === 400) {\n                dispatch({\n                    type: NOTE_ERROR,\n                    payload: error.response.data.details[0].message\n                });\n            } else {\n                dispatch({\n                    type: NOTE_ERROR,\n                    payload: error.response.data\n                });\n            }\n        }\n    };\n}\nexport const EditNote = data => {\n    return async dispatch => {\n        try {\n            const res = await Axios.post('http://localhost:5000/notes/edit_note', data)\n            dispatch({\n                type: NOTE_EDIT,\n                payload: res.data.token\n            });\n        } catch (error) {\n            if (error.response.status === 400) {\n                dispatch({\n                    type: NOTE_ERROR,\n                    payload: error.response.data.details[0].message\n                });\n            } else {\n                dispatch({\n                    type: NOTE_ERROR,\n                    payload: error.response.data\n                });\n            }\n        }\n    };\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}