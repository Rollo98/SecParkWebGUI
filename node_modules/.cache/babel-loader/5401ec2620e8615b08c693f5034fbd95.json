{"ast":null,"code":"var _jsxFileName = \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport Axios from 'axios';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './pages/App';\nimport NotesApp from './components/NotesApp';\nimport ShowNote from './components/ShowNote';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport reducers from './reducers/index';\nimport authGuard from './components/HOCs/authGuard';\nimport NewNote from './components/NewNote';\nvar jwtToken = localStorage.getItem('JWT_TOKEN');\nAxios.defaults.headers.common['Authorization'] = jwtToken;\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers, {\n    auth: {\n      token: jwtToken,\n      isAuthenticated: jwtToken ? true : false\n    }\n  }, applyMiddleware(reduxThunk)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: authGuard(NotesApp),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/NewNote\",\n  component: authGuard(NewNote),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/note/:title::date\",\n  component: function component(props) {\n    return React.createElement(ShowNote, Object.assign({\n      title: props.match.params.title,\n      date: props.match.params.date\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/SignUp\",\n  component: SignUp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/SignIn\",\n  component: SignIn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})))), document.querySelector('#root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/rolandpaiusan/Desktop/SecParkWebGUI/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Route","createStore","applyMiddleware","Provider","reduxThunk","Axios","registerServiceWorker","App","NotesApp","ShowNote","SignUp","SignIn","reducers","authGuard","NewNote","jwtToken","localStorage","getItem","defaults","headers","common","render","auth","token","isAuthenticated","props","match","params","title","date","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;AACAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,QAAjD;AAGAjB,QAAQ,CAACuB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEpB,WAAW,CAACW,QAAD,EAAW;AACnCU,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAER,QADL;AAEFS,MAAAA,eAAe,EAAET,QAAQ,GAAG,IAAH,GAAU;AAFjC;AAD6B,GAAX,EAKzBb,eAAe,CAACE,UAAD,CALU,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAES,SAAS,CAACL,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,UAAlB;AAA6B,EAAA,SAAS,EAAEK,SAAS,CAACC,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,oBAAlB;AAAuC,EAAA,SAAS,EAAE,mBAACW,KAAD;AAAA,WAAW,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAApC;AAA2C,MAAA,IAAI,EAAEH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE;AAApE,OAA8EJ,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAKI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEf,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,EAMI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,CADJ,CANJ,CADJ,EAkBImB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAlBJ,E,CAoBA;AACA;AACA;;AACAzB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport Axios from 'axios';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './pages/App';\nimport NotesApp from './components/NotesApp';\nimport ShowNote from './components/ShowNote';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport reducers from './reducers/index';\nimport authGuard from './components/HOCs/authGuard';\nimport NewNote from './components/NewNote';\n\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\nAxios.defaults.headers.common['Authorization'] = jwtToken;\n\n\nReactDOM.render(\n    <Provider store={createStore(reducers, {\n        auth: {\n            token: jwtToken,\n            isAuthenticated: jwtToken ? true : false\n        }\n    }, applyMiddleware(reduxThunk))}>\n        <BrowserRouter>\n            <App >\n                <Route exact path=\"/\" component={authGuard(NotesApp)} />\n                <Route exact path=\"/NewNote\" component={authGuard(NewNote)} />\n                <Route exact path=\"/note/:title::date\" component={(props) => <ShowNote title={props.match.params.title} date={props.match.params.date} {...props} />} />\n\n                <Route exact path=\"/SignUp\" component={SignUp} />\n                <Route exact path=\"/SignIn\" component={SignIn} />\n            </App>\n        </BrowserRouter>\n    </Provider>,\n    document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();"]},"metadata":{},"sourceType":"module"}