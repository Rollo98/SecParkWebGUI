{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rolandpaiusan/Desktop/SecParkWebGUI/src/components/NewNote.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport io from 'socket.io-client';\nimport CustomInput from './CustomInput';\nimport CustomTextarea from './CustomTextarea';\nimport * as actions from '../actions';\n\nvar NewNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewNote, _Component);\n\n  function NewNote(props) {\n    var _this;\n\n    _classCallCheck(this, NewNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewNote).call(this, props));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      socket: io.connect('http://localhost:5000')\n    };\n    return _this;\n  }\n\n  _createClass(NewNote, [{\n    key: \"updateNeeded\",\n    value: function updateNeeded() {\n      this.state.socket.emit(\"refresh\", localStorage.getItem('JWT_TOKEN'));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(formData) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formData.date = new Date();\n                _context.next = 3;\n                return this.props.NewNote(formData);\n\n              case 3:\n                if (!this.props.errorMessage) {\n                  this.updateNeeded();\n                  this.props.history.push(\"/\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        type: \"text\",\n        id: \"Title\",\n        label: \"Title:\",\n        placeholder: \"New Note\",\n        component: CustomInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"body\",\n        type: \"text\",\n        id: \"body\",\n        label: \"\",\n        placeholder: \"\",\n        rows: \"5\",\n        component: CustomTextarea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), this.props.errorMessage ? React.createElement(\"div\", {\n        className: \"alert  alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.errorMessage) : null, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.updateNeeded(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return NewNote;\n}(Component);\n\nfunction MapStateToProps(state) {\n  return {\n    errorMessage: state.note.errorMessage\n  };\n}\n\nexport default compose(connect(MapStateToProps, actions), reduxForm({\n  form: 'NewNote'\n}))(NewNote);","map":{"version":3,"sources":["/Users/rolandpaiusan/Desktop/SecParkWebGUI/src/components/NewNote.js"],"names":["React","Component","reduxForm","Field","connect","compose","io","CustomInput","CustomTextarea","actions","NewNote","props","onSubmit","bind","state","socket","emit","localStorage","getItem","formData","date","Date","errorMessage","updateNeeded","history","push","handleSubmit","MapStateToProps","note","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport io from 'socket.io-client';\n\n\nimport CustomInput from './CustomInput';\nimport CustomTextarea from './CustomTextarea';\nimport * as actions from '../actions';\nclass NewNote extends Component {\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            socket: io.connect('http://localhost:5000')\n        }\n    }\n\n    updateNeeded() {\n        this.state.socket.emit(\"refresh\", localStorage.getItem('JWT_TOKEN'));\n    }\n\n    async onSubmit(formData) {\n        formData.date = new Date();\n        await this.props.NewNote(formData)\n        if (!this.props.errorMessage) {\n            this.updateNeeded();\n            this.props.history.push(\"/\");\n        }\n    }\n\n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <form onSubmit={handleSubmit(this.onSubmit)}>\n                        <fieldset>\n                            <Field\n                                name=\"title\"\n                                type=\"text\"\n                                id=\"Title\"\n                                label=\"Title:\"\n                                placeholder=\"New Note\"\n                                component={CustomInput} />\n                        </fieldset>\n                        <fieldset>\n                            <Field\n                                name=\"body\"\n                                type=\"text\"\n                                id=\"body\"\n                                label=\"\"\n                                placeholder=\"\"\n                                rows=\"5\"\n                                component={CustomTextarea} />\n                        </fieldset>\n                        {this.props.errorMessage ?\n                            <div className=\"alert  alert-danger\">\n                                {this.props.errorMessage}\n                            </div>\n                            : null}\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.updateNeeded()}>Save</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction MapStateToProps(state) {\n    return {\n        errorMessage: state.note.errorMessage\n    }\n}\n\nexport default compose(\n    connect(MapStateToProps, actions),\n    reduxForm({ form: 'NewNote' })\n)(NewNote);"]},"metadata":{},"sourceType":"module"}